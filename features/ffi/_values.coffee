
func_map = class {
	ffi_type() InitAudioDevice = -> rew::ffi::buffer
	ffi_type() CloseAudioDevice = -> rew::ffi::buffer
	ffi_type() IsAudioDeviceReady = -> rew::ffi::bool
	ffi_type(rew::ffi::f32) SetMasterVolume = -> rew::ffi::buffer
	ffi_type() GetMasterVolume = -> rew::ffi::f32
	ffi_type(rew::ffi::buffer) LoadWaveWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::buffer,rew::ffi::buffer,rew::ffi::i32) LoadWaveFromMemoryWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) IsWaveValidWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::buffer) LoadSoundWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) LoadSoundFromWaveWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) LoadSoundAliasWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) IsSoundValidWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::i32) UpdateSoundWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) UnloadWaveWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) UnloadSoundWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) UnloadSoundAliasWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) ExportWaveWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) ExportWaveAsCodeWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr) PlaySoundWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) StopSoundWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) PauseSoundWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) ResumeSoundWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) IsSoundPlayingWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::f32) SetSoundVolumeWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32) SetSoundPitchWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32) SetSoundPanWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) WaveCopyWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32) WaveCrop = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32) WaveFormat = -> rew::ffi::buffer
	ffi_type(rew::ffi::f32) UnloadWaveSamples = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) LoadMusicStreamWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::buffer,rew::ffi::buffer,rew::ffi::i32) LoadMusicStreamFromMemoryWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) IsMusicValidWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr) UnloadMusicStreamWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) PlayMusicStreamWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) IsMusicStreamPlayingWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr) UpdateMusicStreamWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) StopMusicStreamWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) PauseMusicStreamWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) ResumeMusicStreamWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32) SeekMusicStreamWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32) SetMusicVolumeWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32) SetMusicPitchWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32) SetMusicPanWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) GetMusicTimeLengthWrapper = -> rew::ffi::f32
	ffi_type(rew::ffi::ptr) GetMusicTimePlayedWrapper = -> rew::ffi::f32
	ffi_type(rew::ffi::u32,rew::ffi::u32,rew::ffi::u32) LoadAudioStreamWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) IsAudioStreamValidWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr) UnloadAudioStreamWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::i32) UpdateAudioStreamWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) IsAudioStreamProcessedWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr) PlayAudioStreamWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) PauseAudioStreamWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) ResumeAudioStreamWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) IsAudioStreamPlayingWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr) StopAudioStreamWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32) SetAudioStreamVolumeWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32) SetAudioStreamPitchWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32) SetAudioStreamPanWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32) SetAudioStreamBufferSizeDefault = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) SetAudioStreamCallbackWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) AttachAudioStreamProcessorWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) DetachAudioStreamProcessorWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) AttachAudioMixedProcessor = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) DetachAudioMixedProcessor = -> rew::ffi::buffer

	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::buffer) InitWindow = -> rew::ffi::buffer
	ffi_type() CloseWindow = -> rew::ffi::buffer
	ffi_type() WindowShouldClose = -> rew::ffi::bool
	ffi_type() IsWindowReady = -> rew::ffi::bool
	ffi_type() IsWindowFullscreen = -> rew::ffi::bool
	ffi_type() IsWindowHidden = -> rew::ffi::bool
	ffi_type() IsWindowMinimized = -> rew::ffi::bool
	ffi_type() IsWindowMaximized = -> rew::ffi::bool
	ffi_type() IsWindowFocused = -> rew::ffi::bool
	ffi_type() IsWindowResized = -> rew::ffi::bool
	ffi_type(rew::ffi::u32) IsWindowState = -> rew::ffi::bool
	ffi_type(rew::ffi::u32) SetWindowState = -> rew::ffi::buffer
	ffi_type(rew::ffi::u32) ClearWindowState = -> rew::ffi::buffer
	ffi_type() ToggleFullscreen = -> rew::ffi::buffer
	ffi_type() ToggleBorderlessWindowed = -> rew::ffi::buffer
	ffi_type() MaximizeWindow = -> rew::ffi::buffer
	ffi_type() MinimizeWindow = -> rew::ffi::buffer
	ffi_type() RestoreWindow = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) SetWindowIconWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32) SetWindowIcons = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) SetWindowTitle = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32) SetWindowPosition = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32) SetWindowMonitor = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32) SetWindowMinSize = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32) SetWindowMaxSize = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32) SetWindowSize = -> rew::ffi::buffer
	ffi_type(rew::ffi::f32) SetWindowOpacity = -> rew::ffi::buffer
	ffi_type() SetWindowFocused = -> rew::ffi::buffer
	ffi_type() GetScreenWidth = -> rew::ffi::i32
	ffi_type() GetScreenHeight = -> rew::ffi::i32
	ffi_type() GetRenderWidth = -> rew::ffi::i32
	ffi_type() GetRenderHeight = -> rew::ffi::i32
	ffi_type() GetMonitorCount = -> rew::ffi::i32
	ffi_type() GetCurrentMonitor = -> rew::ffi::i32
	ffi_type(rew::ffi::i32) GetMonitorPositionWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::i32) GetMonitorWidth = -> rew::ffi::i32
	ffi_type(rew::ffi::i32) GetMonitorHeight = -> rew::ffi::i32
	ffi_type(rew::ffi::i32) GetMonitorPhysicalWidth = -> rew::ffi::i32
	ffi_type(rew::ffi::i32) GetMonitorPhysicalHeight = -> rew::ffi::i32
	ffi_type(rew::ffi::i32) GetMonitorRefreshRate = -> rew::ffi::i32
	ffi_type() GetWindowPositionWrapper = -> rew::ffi::ptr
	ffi_type() GetWindowScaleDPIWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::buffer) SetClipboardText = -> rew::ffi::buffer
	ffi_type() GetClipboardImageWrapper = -> rew::ffi::ptr
	ffi_type() EnableEventWaiting = -> rew::ffi::buffer
	ffi_type() DisableEventWaiting = -> rew::ffi::buffer
	ffi_type() ShowCursor = -> rew::ffi::buffer
	ffi_type() HideCursor = -> rew::ffi::buffer
	ffi_type() IsCursorHidden = -> rew::ffi::bool
	ffi_type() EnableCursor = -> rew::ffi::buffer
	ffi_type() DisableCursor = -> rew::ffi::buffer
	ffi_type() IsCursorOnScreen = -> rew::ffi::bool
	ffi_type(rew::ffi::i64) ClearBackground = -> rew::ffi::buffer
	ffi_type() BeginDrawing = -> rew::ffi::buffer
	ffi_type() EndDrawing = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) BeginMode2DWrapper = -> rew::ffi::buffer
	ffi_type() EndMode2D = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) BeginMode3DWrapper = -> rew::ffi::buffer
	ffi_type() EndMode3D = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) BeginTextureModeWrapper = -> rew::ffi::buffer
	ffi_type() EndTextureMode = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) BeginShaderModeWrapper = -> rew::ffi::buffer
	ffi_type() EndShaderMode = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32) BeginBlendMode = -> rew::ffi::buffer
	ffi_type() EndBlendMode = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32) BeginScissorMode = -> rew::ffi::buffer
	ffi_type() EndScissorMode = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) BeginVrStereoModeWrapper = -> rew::ffi::buffer
	ffi_type() EndVrStereoMode = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) LoadVrStereoConfigWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) UnloadVrStereoConfigWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::buffer) LoadShaderWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::buffer,rew::ffi::buffer) LoadShaderFromMemoryWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) IsShaderValidWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) GetShaderLocationWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) GetShaderLocationAttribWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::i32,rew::ffi::buffer,rew::ffi::i32) SetShaderValueWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::i32,rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32) SetShaderValueVWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::i32,rew::ffi::ptr) SetShaderValueMatrixWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::i32,rew::ffi::ptr) SetShaderValueTextureWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) UnloadShaderWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr) GetScreenToWorldRayWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i32,rew::ffi::i32) GetScreenToWorldRayExWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::ptr) GetWorldToScreenWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i32,rew::ffi::i32) GetWorldToScreenExWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::ptr) GetWorldToScreen2DWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::ptr) GetScreenToWorld2DWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) GetCameraMatrixWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) GetCameraMatrix2DWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::i32) SetTargetFPS = -> rew::ffi::buffer
	ffi_type() GetFrameTime = -> rew::ffi::f32
	ffi_type() GetTime = -> rew::ffi::buffer
	ffi_type() GetFPS = -> rew::ffi::i32
	ffi_type() SwapScreenBuffer = -> rew::ffi::buffer
	ffi_type() PollInputEvents = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) WaitTime = -> rew::ffi::buffer
	ffi_type(rew::ffi::u32) SetRandomSeed = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32) GetRandomValue = -> rew::ffi::i32
	ffi_type(rew::ffi::i32) UnloadRandomSequence = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) TakeScreenshot = -> rew::ffi::buffer
	ffi_type(rew::ffi::u32) SetConfigFlags = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) OpenURL = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::buffer,rew::ffi::buffer) TraceLog = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32) SetTraceLogLevel = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) MemFree = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) SetTraceLogCallback = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) SetLoadFileDataCallback = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) SetSaveFileDataCallback = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) SetLoadFileTextCallback = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) SetSaveFileTextCallback = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) UnloadFileData = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::buffer,rew::ffi::i32) SaveFileData = -> rew::ffi::bool
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::buffer) ExportDataAsCode = -> rew::ffi::bool
	ffi_type(rew::ffi::buffer) UnloadFileText = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::buffer) SaveFileText = -> rew::ffi::bool
	ffi_type(rew::ffi::buffer) FileExists = -> rew::ffi::bool
	ffi_type(rew::ffi::buffer) DirectoryExists = -> rew::ffi::bool
	ffi_type(rew::ffi::buffer,rew::ffi::buffer) IsFileExtension = -> rew::ffi::bool
	ffi_type(rew::ffi::buffer) GetFileLength = -> rew::ffi::i32
	ffi_type(rew::ffi::buffer) MakeDirectory = -> rew::ffi::i32
	ffi_type(rew::ffi::buffer) ChangeDirectory = -> rew::ffi::bool
	ffi_type(rew::ffi::buffer) IsPathFile = -> rew::ffi::bool
	ffi_type(rew::ffi::buffer) IsFileNameValid = -> rew::ffi::bool
	ffi_type(rew::ffi::buffer) LoadDirectoryFilesWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::buffer,rew::ffi::buffer,rew::ffi::bool) LoadDirectoryFilesExWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) UnloadDirectoryFilesWrapper = -> rew::ffi::buffer
	ffi_type() IsFileDropped = -> rew::ffi::bool
	ffi_type() LoadDroppedFilesWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) UnloadDroppedFilesWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) GetFileModTime = -> rew::ffi::i64
	ffi_type(rew::ffi::buffer) LoadAutomationEventListWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) UnloadAutomationEventListWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) ExportAutomationEventListWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::buffer) SetAutomationEventList = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32) SetAutomationEventBaseFrame = -> rew::ffi::buffer
	ffi_type() StartAutomationEventRecording = -> rew::ffi::buffer
	ffi_type() StopAutomationEventRecording = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) PlayAutomationEventWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32) IsKeyPressed = -> rew::ffi::bool
	ffi_type(rew::ffi::i32) IsKeyPressedRepeat = -> rew::ffi::bool
	ffi_type(rew::ffi::i32) IsKeyDown = -> rew::ffi::bool
	ffi_type(rew::ffi::i32) IsKeyReleased = -> rew::ffi::bool
	ffi_type(rew::ffi::i32) IsKeyUp = -> rew::ffi::bool
	ffi_type() GetKeyPressed = -> rew::ffi::i32
	ffi_type() GetCharPressed = -> rew::ffi::i32
	ffi_type(rew::ffi::i32) SetExitKey = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32) IsGamepadAvailable = -> rew::ffi::bool
	ffi_type(rew::ffi::i32,rew::ffi::i32) IsGamepadButtonPressed = -> rew::ffi::bool
	ffi_type(rew::ffi::i32,rew::ffi::i32) IsGamepadButtonDown = -> rew::ffi::bool
	ffi_type(rew::ffi::i32,rew::ffi::i32) IsGamepadButtonReleased = -> rew::ffi::bool
	ffi_type(rew::ffi::i32,rew::ffi::i32) IsGamepadButtonUp = -> rew::ffi::bool
	ffi_type() GetGamepadButtonPressed = -> rew::ffi::i32
	ffi_type(rew::ffi::i32) GetGamepadAxisCount = -> rew::ffi::i32
	ffi_type(rew::ffi::i32,rew::ffi::i32) GetGamepadAxisMovement = -> rew::ffi::f32
	ffi_type(rew::ffi::buffer) SetGamepadMappings = -> rew::ffi::i32
	ffi_type(rew::ffi::i32,rew::ffi::f32,rew::ffi::f32,rew::ffi::f32) SetGamepadVibration = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32) IsMouseButtonPressed = -> rew::ffi::bool
	ffi_type(rew::ffi::i32) IsMouseButtonDown = -> rew::ffi::bool
	ffi_type(rew::ffi::i32) IsMouseButtonReleased = -> rew::ffi::bool
	ffi_type(rew::ffi::i32) IsMouseButtonUp = -> rew::ffi::bool
	ffi_type() GetMouseX = -> rew::ffi::i32
	ffi_type() GetMouseY = -> rew::ffi::i32
	ffi_type() GetMousePositionWrapper = -> rew::ffi::ptr
	ffi_type() GetMouseDeltaWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::i32,rew::ffi::i32) SetMousePosition = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32) SetMouseOffset = -> rew::ffi::buffer
	ffi_type(rew::ffi::f32,rew::ffi::f32) SetMouseScale = -> rew::ffi::buffer
	ffi_type() GetMouseWheelMove = -> rew::ffi::f32
	ffi_type() GetMouseWheelMoveVWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::i32) SetMouseCursor = -> rew::ffi::buffer
	ffi_type() GetTouchX = -> rew::ffi::i32
	ffi_type() GetTouchY = -> rew::ffi::i32
	ffi_type(rew::ffi::i32) GetTouchPositionWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::i32) GetTouchPointId = -> rew::ffi::i32
	ffi_type() GetTouchPointCount = -> rew::ffi::i32
	ffi_type(rew::ffi::u32) SetGesturesEnabled = -> rew::ffi::buffer
	ffi_type(rew::ffi::u32) IsGestureDetected = -> rew::ffi::bool
	ffi_type() GetGestureDetected = -> rew::ffi::i32
	ffi_type() GetGestureHoldDuration = -> rew::ffi::f32
	ffi_type() GetGestureDragVectorWrapper = -> rew::ffi::ptr
	ffi_type() GetGestureDragAngle = -> rew::ffi::f32
	ffi_type() GetGesturePinchVectorWrapper = -> rew::ffi::ptr
	ffi_type() GetGesturePinchAngle = -> rew::ffi::f32
	ffi_type(rew::ffi::buffer,rew::ffi::i32) UpdateCamera = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32) UpdateCameraProWrapper = -> rew::ffi::buffer

	ffi_type() GuiEnable = -> rew::ffi::buffer
	ffi_type() GuiDisable = -> rew::ffi::buffer
	ffi_type() GuiLock = -> rew::ffi::buffer
	ffi_type() GuiUnlock = -> rew::ffi::buffer
	ffi_type() GuiIsLocked = -> rew::ffi::bool
	ffi_type(rew::ffi::f32) GuiSetAlpha = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32) GuiSetState = -> rew::ffi::buffer
	ffi_type() GuiGetState = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr) GuiSetFontWrapper = -> rew::ffi::buffer
	ffi_type() GuiGetFontWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::i32) GuiSetStyle = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32) GuiGetStyle = -> rew::ffi::i32
	ffi_type(rew::ffi::buffer) GuiLoadStyle = -> rew::ffi::buffer
	ffi_type() GuiLoadStyleDefault = -> rew::ffi::buffer
	ffi_type() GuiEnableTooltip = -> rew::ffi::buffer
	ffi_type() GuiDisableTooltip = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) GuiSetTooltip = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32) GuiSetIconScale = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64) GuiDrawIcon = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) GuiWindowBoxWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) GuiGroupBoxWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) GuiLineWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) GuiPanelWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32) GuiTabBarWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::ptr,rew::ffi::buffer,rew::ffi::buffer) GuiScrollPanelWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) GuiLabelWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) GuiButtonWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) GuiLabelButtonWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::bool) GuiToggleWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::i32) GuiToggleGroupWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::i32) GuiToggleSliderWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::bool) GuiCheckBoxWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::i32) GuiComboBoxWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::i32,rew::ffi::bool) GuiDropdownBoxWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::bool) GuiSpinnerWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::bool) GuiValueBoxWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::i32,rew::ffi::bool) GuiTextBoxWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::buffer,rew::ffi::f32,rew::ffi::f32,rew::ffi::f32) GuiSliderWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::buffer,rew::ffi::f32,rew::ffi::f32,rew::ffi::f32) GuiSliderBarWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::buffer,rew::ffi::f32,rew::ffi::f32,rew::ffi::f32) GuiProgressBarWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) GuiStatusBarWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) GuiDummyRecWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::f32,rew::ffi::i32,rew::ffi::buffer) GuiGridWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32) GuiListViewWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32) GuiListViewExWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::buffer,rew::ffi::buffer) GuiMessageBoxWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::buffer,rew::ffi::buffer,rew::ffi::buffer,rew::ffi::i32,rew::ffi::bool) GuiTextInputBoxWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::i64) GuiColorPickerWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::i64) GuiColorPanelWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::f32) GuiColorBarAlphaWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::f32) GuiColorBarHueWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::buffer) GuiColorPickerHSVWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::buffer) GuiColorPanelHSVWrapper = -> rew::ffi::i32

	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i64) DrawLine3DWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::i64) DrawPoint3DWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawCircle3DWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i64) DrawTriangle3DWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i64) DrawTriangleStrip3D = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::f32,rew::ffi::f32,rew::ffi::i64) DrawCubeWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i64) DrawCubeVWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::f32,rew::ffi::f32,rew::ffi::i64) DrawCubeWiresWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i64) DrawCubeWiresVWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawSphereWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64) DrawSphereExWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64) DrawSphereWiresWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::f32,rew::ffi::f32,rew::ffi::i32,rew::ffi::i64) DrawCylinderWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::f32,rew::ffi::i32,rew::ffi::i64) DrawCylinderExWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::f32,rew::ffi::f32,rew::ffi::i32,rew::ffi::i64) DrawCylinderWiresWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::f32,rew::ffi::i32,rew::ffi::i64) DrawCylinderWiresExWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64) DrawCapsuleWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64) DrawCapsuleWiresWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i64) DrawPlaneWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::i64) DrawRayWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::f32) DrawGrid = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) LoadModelWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) LoadModelFromMeshWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) IsModelValidWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr) UnloadModelWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) GetModelBoundingBoxWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawModelWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::ptr,rew::ffi::i64) DrawModelExWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawModelWiresWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::ptr,rew::ffi::i64) DrawModelWiresExWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawModelPointsWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::ptr,rew::ffi::i64) DrawModelPointsExWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::i64) DrawBoundingBoxWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawBillboardWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i64) DrawBillboardRecWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawBillboardProWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::bool) UploadMesh = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::i32,rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32) UpdateMeshBufferWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) UnloadMeshWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr) DrawMeshWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::buffer,rew::ffi::i32) DrawMeshInstancedWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) GetMeshBoundingBoxWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::buffer) GenMeshTangents = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) ExportMeshWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) ExportMeshAsCodeWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::i32,rew::ffi::f32) GenMeshPolyWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::f32,rew::ffi::f32,rew::ffi::i32,rew::ffi::i32) GenMeshPlaneWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::f32,rew::ffi::f32,rew::ffi::f32) GenMeshCubeWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::f32,rew::ffi::i32,rew::ffi::i32) GenMeshSphereWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::f32,rew::ffi::i32,rew::ffi::i32) GenMeshHemiSphereWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::f32,rew::ffi::f32,rew::ffi::i32) GenMeshCylinderWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::f32,rew::ffi::f32,rew::ffi::i32) GenMeshConeWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::f32,rew::ffi::f32,rew::ffi::i32,rew::ffi::i32) GenMeshTorusWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::f32,rew::ffi::f32,rew::ffi::i32,rew::ffi::i32) GenMeshKnotWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::ptr) GenMeshHeightmapWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::ptr) GenMeshCubicmapWrapper = -> rew::ffi::ptr
	ffi_type() LoadMaterialDefaultWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) IsMaterialValidWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr) UnloadMaterialWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::ptr) SetMaterialTextureWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32) SetModelMeshMaterial = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i32) UpdateModelAnimationWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i32) UpdateModelAnimationBonesWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) UnloadModelAnimationWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32) UnloadModelAnimations = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr) IsModelAnimationValidWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::ptr,rew::ffi::f32) CheckCollisionSpheresWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::ptr) CheckCollisionBoxesWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32) CheckCollisionBoxSphereWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32) GetRayCollisionSphereWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::ptr) GetRayCollisionBoxWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr) GetRayCollisionMeshWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr) GetRayCollisionTriangleWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr) GetRayCollisionQuadWrapper = -> rew::ffi::ptr

	ffi_type(rew::ffi::ptr,rew::ffi::ptr) SetShapesTextureWrapper = -> rew::ffi::buffer
	ffi_type() GetShapesTextureWrapper = -> rew::ffi::ptr
	ffi_type() GetShapesTextureRectangleWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::i64) DrawPixel = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::i64) DrawPixelVWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64) DrawLine = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i64) DrawLineVWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawLineExWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i64) DrawLineStrip = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawLineBezierWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::f32,rew::ffi::i64) DrawCircle = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::f32,rew::ffi::f32,rew::ffi::i32,rew::ffi::i64) DrawCircleSectorWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::f32,rew::ffi::f32,rew::ffi::i32,rew::ffi::i64) DrawCircleSectorLinesWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::f32,rew::ffi::i64,rew::ffi::i64) DrawCircleGradient = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawCircleVWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::f32,rew::ffi::i64) DrawCircleLines = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawCircleLinesVWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::f32,rew::ffi::f32,rew::ffi::i64) DrawEllipse = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::f32,rew::ffi::f32,rew::ffi::i64) DrawEllipseLines = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::f32,rew::ffi::f32,rew::ffi::f32,rew::ffi::i32,rew::ffi::i64) DrawRingWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::f32,rew::ffi::f32,rew::ffi::f32,rew::ffi::i32,rew::ffi::i64) DrawRingLinesWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64) DrawRectangle = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i64) DrawRectangleVWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::i64) DrawRectangleRecWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawRectangleProWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64,rew::ffi::i64) DrawRectangleGradientV = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64,rew::ffi::i64) DrawRectangleGradientH = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::i64,rew::ffi::i64,rew::ffi::i64,rew::ffi::i64) DrawRectangleGradientExWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64) DrawRectangleLines = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawRectangleLinesExWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::i32,rew::ffi::i64) DrawRectangleRoundedWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::i32,rew::ffi::i64) DrawRectangleRoundedLinesWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::i32,rew::ffi::f32,rew::ffi::i64) DrawRectangleRoundedLinesExWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i64) DrawTriangleWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i64) DrawTriangleLinesWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i64) DrawTriangleFan = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i64) DrawTriangleStrip = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::i32,rew::ffi::f32,rew::ffi::f32,rew::ffi::i64) DrawPolyWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::i32,rew::ffi::f32,rew::ffi::f32,rew::ffi::i64) DrawPolyLinesWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::i32,rew::ffi::f32,rew::ffi::f32,rew::ffi::f32,rew::ffi::i64) DrawPolyLinesExWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::f32,rew::ffi::i64) DrawSplineLinear = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::f32,rew::ffi::i64) DrawSplineBasis = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::f32,rew::ffi::i64) DrawSplineCatmullRom = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::f32,rew::ffi::i64) DrawSplineBezierQuadratic = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::f32,rew::ffi::i64) DrawSplineBezierCubic = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawSplineSegmentLinearWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawSplineSegmentBasisWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawSplineSegmentCatmullRomWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawSplineSegmentBezierQuadraticWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawSplineSegmentBezierCubicWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32) GetSplinePointLinearWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32) GetSplinePointBasisWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32) GetSplinePointCatmullRomWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32) GetSplinePointBezierQuadWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32) GetSplinePointBezierCubicWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::ptr) CheckCollisionRecsWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::ptr,rew::ffi::f32) CheckCollisionCirclesWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::ptr) CheckCollisionCircleRecWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::f32,rew::ffi::ptr,rew::ffi::ptr) CheckCollisionCircleLineWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::ptr) CheckCollisionPointRecWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32) CheckCollisionPointCircleWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr) CheckCollisionPointTriangleWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i32) CheckCollisionPointLineWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::i32) CheckCollisionPointPolyWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::buffer) CheckCollisionLinesWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::ptr) GetCollisionRecWrapper = -> rew::ffi::ptr

	ffi_type() GetFontDefaultWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::buffer) LoadFontWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32) LoadFontExWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::i64,rew::ffi::i32) LoadFontFromImageWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::buffer,rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32) LoadFontFromMemoryWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) IsFontValidWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::buffer,rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32) GenImageFontAtlasWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::buffer,rew::ffi::i32) UnloadFontData = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) UnloadFontWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) ExportFontAsCodeWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::i32,rew::ffi::i32) DrawFPS = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64) DrawText = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::ptr,rew::ffi::f32,rew::ffi::f32,rew::ffi::i64) DrawTextExWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::f32,rew::ffi::f32,rew::ffi::i64) DrawTextProWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::i32,rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawTextCodepointWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::i32,rew::ffi::ptr,rew::ffi::f32,rew::ffi::f32,rew::ffi::i64) DrawTextCodepointsWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32) SetTextLineSpacing = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32) MeasureText = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::f32,rew::ffi::f32) MeasureTextExWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::i32) GetGlyphIndexWrapper = -> rew::ffi::i32
	ffi_type(rew::ffi::ptr,rew::ffi::i32) GetGlyphInfoWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::i32) GetGlyphAtlasRecWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::buffer) UnloadUTF8 = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32) UnloadCodepoints = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) GetCodepointCount = -> rew::ffi::i32
	ffi_type(rew::ffi::buffer,rew::ffi::i32) GetCodepoint = -> rew::ffi::i32
	ffi_type(rew::ffi::buffer,rew::ffi::i32) GetCodepointNext = -> rew::ffi::i32
	ffi_type(rew::ffi::buffer,rew::ffi::i32) GetCodepointPrevious = -> rew::ffi::i32
	ffi_type(rew::ffi::buffer,rew::ffi::buffer) TextCopy = -> rew::ffi::i32
	ffi_type(rew::ffi::buffer,rew::ffi::buffer) TextIsEqual = -> rew::ffi::bool
	ffi_type(rew::ffi::buffer,rew::ffi::buffer,rew::ffi::i32) TextAppend = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::buffer) TextFindIndex = -> rew::ffi::i32
	ffi_type(rew::ffi::buffer) TextToInteger = -> rew::ffi::i32
	ffi_type(rew::ffi::buffer) TextToFloat = -> rew::ffi::f32

	ffi_type(rew::ffi::buffer) LoadImageWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32) LoadImageRawWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::buffer,rew::ffi::i32) LoadImageAnimWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::buffer,rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32) LoadImageAnimFromMemoryWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::buffer,rew::ffi::buffer,rew::ffi::i32) LoadImageFromMemoryWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) LoadImageFromTextureWrapper = -> rew::ffi::ptr
	ffi_type() LoadImageFromScreenWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) IsImageValidWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr) UnloadImageWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) ExportImageWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) ExportImageAsCodeWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::i64) GenImageColorWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64,rew::ffi::i64) GenImageGradientLinearWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::f32,rew::ffi::i64,rew::ffi::i64) GenImageGradientRadialWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::f32,rew::ffi::i64,rew::ffi::i64) GenImageGradientSquareWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64,rew::ffi::i64) GenImageCheckedWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::f32) GenImageWhiteNoiseWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::f32) GenImagePerlinNoiseWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::i32) GenImageCellularWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::buffer) GenImageTextWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) ImageCopyWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::ptr) ImageFromImageWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::i32) ImageFromChannelWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i64) ImageTextWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::buffer,rew::ffi::f32,rew::ffi::f32,rew::ffi::i64) ImageTextExWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::buffer,rew::ffi::i32) ImageFormat = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i64) ImageToPOT = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::ptr) ImageCropWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::f32) ImageAlphaCrop = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i64,rew::ffi::f32) ImageAlphaClear = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::ptr) ImageAlphaMaskWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) ImageAlphaPremultiply = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32) ImageBlurGaussian = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::buffer,rew::ffi::i32) ImageKernelConvolution = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32) ImageResize = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32) ImageResizeNN = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64) ImageResizeCanvas = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) ImageMipmaps = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32) ImageDither = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) ImageFlipVertical = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) ImageFlipHorizontal = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32) ImageRotate = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) ImageRotateCW = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) ImageRotateCCW = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i64) ImageColorTint = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) ImageColorInvert = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) ImageColorGrayscale = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::f32) ImageColorContrast = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32) ImageColorBrightness = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i64,rew::ffi::i64) ImageColorReplace = -> rew::ffi::buffer
	ffi_type(rew::ffi::i64) UnloadImageColors = -> rew::ffi::buffer
	ffi_type(rew::ffi::i64) UnloadImagePalette = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::f32) GetImageAlphaBorderWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::i32,rew::ffi::i32) GetImageColorWrapper = -> rew::ffi::i64
	ffi_type(rew::ffi::buffer,rew::ffi::i64) ImageClearBackground = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64) ImageDrawPixel = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::ptr,rew::ffi::i64) ImageDrawPixelVWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64) ImageDrawLine = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i64) ImageDrawLineVWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i32,rew::ffi::i64) ImageDrawLineExWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64) ImageDrawCircle = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::ptr,rew::ffi::i32,rew::ffi::i64) ImageDrawCircleVWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64) ImageDrawCircleLines = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::ptr,rew::ffi::i32,rew::ffi::i64) ImageDrawCircleLinesVWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64) ImageDrawRectangle = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i64) ImageDrawRectangleVWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::ptr,rew::ffi::i64) ImageDrawRectangleRecWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::ptr,rew::ffi::i32,rew::ffi::i64) ImageDrawRectangleLinesWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i64) ImageDrawTriangleWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i64,rew::ffi::i64,rew::ffi::i64) ImageDrawTriangleExWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i64) ImageDrawTriangleLinesWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::buffer,rew::ffi::i32,rew::ffi::i64) ImageDrawTriangleFan = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::buffer,rew::ffi::i32,rew::ffi::i64) ImageDrawTriangleStrip = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i64) ImageDrawWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::buffer,rew::ffi::i32,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64) ImageDrawText = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer,rew::ffi::ptr,rew::ffi::buffer,rew::ffi::ptr,rew::ffi::f32,rew::ffi::f32,rew::ffi::i64) ImageDrawTextExWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) LoadTextureWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) LoadTextureFromImageWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr,rew::ffi::i32) LoadTextureCubemapWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::i32,rew::ffi::i32) LoadRenderTextureWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) IsTextureValidWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr) UnloadTextureWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr) IsRenderTextureValidWrapper = -> rew::ffi::bool
	ffi_type(rew::ffi::ptr) UnloadRenderTextureWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::buffer) UpdateTextureWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::buffer) UpdateTextureRecWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::buffer) GenTextureMipmaps = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::i32) SetTextureFilterWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::i32) SetTextureWrapWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::i32,rew::ffi::i32,rew::ffi::i64) DrawTextureWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i64) DrawTextureVWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::f32,rew::ffi::i64) DrawTextureExWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::i64) DrawTextureRecWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawTextureProWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::ptr,rew::ffi::f32,rew::ffi::i64) DrawTextureNPatchWrapper = -> rew::ffi::buffer
	ffi_type(rew::ffi::i64,rew::ffi::i64) ColorIsEqual = -> rew::ffi::bool
	ffi_type(rew::ffi::i64,rew::ffi::f32) Fade = -> rew::ffi::i64
	ffi_type(rew::ffi::i64) ColorToInt = -> rew::ffi::i32
	ffi_type(rew::ffi::i64) ColorNormalizeWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::ptr) ColorFromNormalizedWrapper = -> rew::ffi::i64
	ffi_type(rew::ffi::i64) ColorToHSVWrapper = -> rew::ffi::ptr
	ffi_type(rew::ffi::f32,rew::ffi::f32,rew::ffi::f32) ColorFromHSV = -> rew::ffi::i64
	ffi_type(rew::ffi::i64,rew::ffi::i64) ColorTint = -> rew::ffi::i64
	ffi_type(rew::ffi::i64,rew::ffi::f32) ColorBrightness = -> rew::ffi::i64
	ffi_type(rew::ffi::i64,rew::ffi::f32) ColorContrast = -> rew::ffi::i64
	ffi_type(rew::ffi::i64,rew::ffi::f32) ColorAlpha = -> rew::ffi::i64
	ffi_type(rew::ffi::i64,rew::ffi::i64,rew::ffi::i64) ColorAlphaBlend = -> rew::ffi::i64
	ffi_type(rew::ffi::i64,rew::ffi::i64,rew::ffi::f32) ColorLerp = -> rew::ffi::i64
	ffi_type(rew::ffi::u32) GetColor = -> rew::ffi::i64
	ffi_type(rew::ffi::buffer,rew::ffi::i32) GetPixelColor = -> rew::ffi::i64
	ffi_type(rew::ffi::buffer,rew::ffi::i64,rew::ffi::i32) SetPixelColor = -> rew::ffi::buffer
	ffi_type(rew::ffi::i32,rew::ffi::i32,rew::ffi::i32) GetPixelDataSize = -> rew::ffi::i32
}

module.exports = func_map
